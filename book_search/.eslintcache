[{"C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\index.js":"1","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\App.js":"2","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\components\\Header\\index.js":"3","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\components\\Footer\\index.js":"4","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\pages\\Search.js":"5","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\pages\\Saved.js":"6","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\components\\SearchResults\\index.js":"7","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\utils\\API.js":"8","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\components\\SearchForm\\index.js":"9"},{"size":193,"mtime":1607312384401,"results":"10","hashOfConfig":"11"},{"size":609,"mtime":1607318590226,"results":"12","hashOfConfig":"11"},{"size":676,"mtime":1607318584419,"results":"13","hashOfConfig":"11"},{"size":174,"mtime":1607318037884,"results":"14","hashOfConfig":"11"},{"size":1873,"mtime":1607637739112,"results":"15","hashOfConfig":"11"},{"size":1984,"mtime":1607843214140,"results":"16","hashOfConfig":"11"},{"size":2454,"mtime":1607842947144,"results":"17","hashOfConfig":"11"},{"size":687,"mtime":1607836054055,"results":"18","hashOfConfig":"11"},{"size":903,"mtime":1607569415993,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"xqtcv6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\index.js",[],["43","44"],"C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\App.js",[],"C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\components\\Header\\index.js",[],"C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\components\\Footer\\index.js",[],"C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\pages\\Search.js",["45"],"import React, { useState, useEffect } from 'react';\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchResults from \"../components/SearchResults\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction Search() {\r\n    // state variable\r\n    const [search, setSearch] = useState(\"\");\r\n    const [results, setResults] = useState([]);\r\n    // const [results, setResults] = useState({\r\n    //     title: \"\",\r\n    //     authors: [],\r\n    //     image: \"\",\r\n    //     link: \"\"\r\n    // })\r\n\r\n\r\n    // didMount:\r\n    // useEffect(() => {\r\n    //     if (!search) {\r\n    //         return;\r\n    //     }\r\n    // }, [search]); // whenever 'search' state changes, this hook is going to run\r\n\r\n    function googleAPI(input) {\r\n        API.getGoogleBook(input)\r\n        .then(res => {\r\n            // console.log(res);\r\n\r\n            if (res.data.length === 0) {\r\n                throw new Error(\"No results found\");\r\n            }\r\n            if (res.data.status === \"error\"){\r\n                throw new Error(res.data.message);\r\n            }\r\n            setResults(res.data);\r\n        })\r\n        .catch(err => console.log(\"error - not connecting to Google API\"));\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        setSearch(event.target.value);\r\n\r\n    };\r\n    \r\n    const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        console.log(search);\r\n\r\n        googleAPI(search);\r\n\r\n        // console.log(results);\r\n        // setSearch(\"\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2> Search for a Book </h2>\r\n        \r\n            <SearchForm \r\n                handleFormSubmit={handleFormSubmit}\r\n                handleInputChange={handleInputChange}\r\n                results={search}\r\n            />\r\n            <SearchResults books={results} searched={search}/>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\pages\\Saved.js",["46"],"import React, {useState, useEffect} from 'react';\r\nimport API from \"../utils/API\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"../components/SearchResults/style.css\";\r\n\r\nfunction Saved() {\r\n    const [books, setBooks] = useState([]);\r\n\r\n    // Load all books and store them with setBooks\r\n    useEffect(() => {\r\n        loadBooks()\r\n    }, [])\r\n\r\n    // API call to database\r\n    function loadBooks() {\r\n        API.getBooks()\r\n        .then(res => setBooks(res.data) )\r\n        .catch(err => console.log(err));\r\n\r\n        console.log(books);\r\n    }\r\n\r\n    function handleDeleteBook(id) {\r\n        API.deleteBook(id)\r\n        .then(res => loadBooks() )\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2> Saved Books </h2>\r\n\r\n            {books.map( (res, index) => {\r\n                let id = index+1;\r\n                return (\r\n                    <Card key={id} className=\"resultsContainer\" border=\"dark\">\r\n                        <Card.Body>\r\n                            <Card.Title> \r\n                                Title: {res.title} \r\n                                <div className=\"deleteBtn btn\" title=\"Delete Book\"\r\n                                    onClick={() => handleDeleteBook(id)} > \r\n                                    <i className=\"fa fa-trash\"></i> \r\n                                </div>\r\n                            </Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">Authors: {res.authors}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                Description: {res.description}\r\n                            </Card.Text>\r\n                            {/* <Card.Img src={res.image} >  </Card.Img> */}\r\n                            <Card.Link href={res.link} > {res.title} </Card.Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            })} \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Saved;","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\components\\SearchResults\\index.js",["47"],"import React from 'react';\r\nimport \"./style.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction SearchResults(props) {\r\n    // console.log(props.books);\r\n    \r\n    // When the form is submitted, use the API.saveBook method to save the book data\r\n    // Then reload books from the database\r\n    function handleSaveBook(saveBook) {\r\n        console.log(saveBook);\r\n\r\n        API.saveBook(saveBook)\r\n        .then(res => console.log(\"Book successfully saved!\") )\r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h3>Results for: {props.searched}</h3>\r\n            \r\n            {props.books.map( (res, index) => {\r\n                let id = index+1;\r\n                let imgLink = res.volumeInfo.imageLinks.thumbnail;\r\n\r\n                return (\r\n                    <Card key={id} className=\"resultsContainer\" border=\"dark\">\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                Title: {res.volumeInfo.title} \r\n                                <div className=\"saveBtn btn\" title=\"Save Book\"\r\n                                    onClick={() => handleSaveBook({            \r\n                                        title: res.volumeInfo.title,\r\n                                        authors: res.volumeInfo.authors,\r\n                                        description: res.volumeInfo.description,\r\n                                        image: res.volumeInfo.imageLinks.thumbnail,\r\n                                        link: res.volumeInfo.infoLink\r\n                                    })} > \r\n                                    <i className=\"fa fa-save\"></i> \r\n                                </div>\r\n                            </Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">Authors: {res.volumeInfo.authors}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                Description: {res.volumeInfo.description}\r\n                            </Card.Text>\r\n                            {/* <Card.Img variant=\"top\" src={require(imgLink)} >  </Card.Img> */}\r\n                            <Card.Link href={res.volumeInfo.infoLink} > {res.volumeInfo.title} </Card.Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                )\r\n            })} \r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchResults;","C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\utils\\API.js",[],"C:\\Users\\Maria\\Desktop\\UO Bootcamp\\github\\Google_Book_Search\\book_search\\src\\components\\SearchForm\\index.js",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":12,"column":8,"nodeType":"60","endLine":12,"endColumn":10,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":26,"column":21,"nodeType":"56","messageId":"57","endLine":26,"endColumn":28},{"ruleId":"50","replacedBy":"63"},{"ruleId":"52","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadBooks'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'imgLink' is assigned a value but never used.",["65"],["66"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [loadBooks]",{"range":"70","text":"71"},[346,348],"[loadBooks]"]